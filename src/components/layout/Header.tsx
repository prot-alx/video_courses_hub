// components/layout/Header.tsx
"use client";
import { signIn, signOut } from "next-auth/react";
import { useAuth } from "@/lib/hooks/useAuth";
import Link from "next/link";

export default function Header() {
  const { user, isAuthenticated, isAdmin, isLoading } = useAuth();

  const handleSignIn = async () => {
    await signIn("google", { callbackUrl: "/" });
  };

  const handleSignOut = async () => {
    await signOut({ callbackUrl: "/" });
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä –ø–æ–∫–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è —Å–µ—Å—Å–∏—è
  if (isLoading) {
    return (
      <header
        className="border-b px-6 py-4"
        style={{
          background: "var(--color-primary-300)",
          borderColor: "var(--color-primary-400)",
        }}
      >
        <div className="max-w-7xl mx-auto flex items-center justify-between">
          <div className="flex items-center gap-4">
            <h1
              className="text-xl font-semibold"
              style={{ color: "var(--color-text-primary)" }}
            >
              üìö VideoCourses
            </h1>
          </div>
          <div className="flex items-center gap-4">
            <div className="w-8 h-8 border-2 border-gray-300 border-t-blue-600 rounded-full animate-spin"></div>
          </div>
        </div>
      </header>
    );
  }

  return (
    <header
      className="border-b px-6 py-4"
      style={{
        background: "var(--color-primary-300)",
        borderColor: "var(--color-primary-400)",
      }}
    >
      <div className="max-w-7xl mx-auto flex items-center justify-between">
        <div className="flex items-center gap-4">
          <h1
            className="text-xl font-semibold"
            style={{ color: "var(--color-text-primary)" }}
          >
            üìö VideoCourses
          </h1>
        </div>
        <div className="flex items-center gap-4">
          {isAuthenticated ? (
            <>
              <span
                className="text-sm font-medium"
                style={{ color: "var(--color-text-primary)" }}
              >
                –ü—Ä–∏–≤–µ—Ç, {user?.name || user?.email?.split("@")[0]}!
                {isAdmin && (
                  <span className="ml-2 px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded-full">
                    –ê–¥–º–∏–Ω
                  </span>
                )}
              </span>

              {/* –ö–ù–û–ü–ö–ê –ù–ê–°–¢–†–û–ï–ö */}
              <Link
                href="/profile"
                className="btn-discord btn-discord-secondary"
              >
                –ü—Ä–æ—Ñ–∏–ª—å
              </Link>

              {isAdmin && (
                <a href="/admin" className="btn-discord btn-discord-secondary">
                  –ê–¥–º–∏–Ω–∫–∞
                </a>
              )}
              <button
                onClick={handleSignOut}
                className="btn-discord btn-discord-secondary"
              >
                –í—ã–π—Ç–∏
              </button>
            </>
          ) : (
            <button
              onClick={handleSignIn}
              className="btn-discord btn-discord-primary"
            >
              –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google
            </button>
          )}
        </div>
      </div>
    </header>
  );
}
