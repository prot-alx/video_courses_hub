// components/admin/DurationUpdater.tsx
"use client";

import { useState, useEffect } from "react";

interface DurationStats {
  videosWithoutDuration: number;
  totalVideos: number;
}

export default function DurationUpdater() {
  const [stats, setStats] = useState<DurationStats | null>(null);
  const [updating, setUpdating] = useState(false);

  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const [results, setResults] = useState<any[] | null>(null);
  console.log(results);
  const fetchStats = async () => {
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–∏–¥–µ–æ –±–µ–∑ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      const response = await fetch("/api/admin/videos");
      const data = await response.json();

      if (data.success) {
        const totalVideos = data.data.length;
        const videosWithoutDuration = data.data.filter(
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (video: any) => !video.duration || video.duration === 0
        ).length;

        setStats({
          videosWithoutDuration,
          totalVideos,
        });
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤–∏–¥–µ–æ:", error);
    }
  };

  const updateDurations = async () => {
    setUpdating(true);
    setResults(null);

    try {
      const response = await fetch("/api/admin/courses/recalculate-duration", {
        method: "POST",
      });

      const data = await response.json();

      if (data.success) {
        alert("–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫—É—Ä—Å–æ–≤ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω–∞!");
        fetchStats(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      } else {
        alert(data.error || "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:", error);
      alert("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏");
    } finally {
      setUpdating(false);
    }
  };

  useEffect(() => {
    fetchStats();
  }, []);

  if (!stats) {
    return (
      <div
        className="p-4 rounded border animate-pulse"
        style={{
          background: "var(--color-primary-100)",
          borderColor: "var(--color-primary-400)",
        }}
      >
        <div className="h-4 bg-gray-300 rounded w-1/3"></div>
      </div>
    );
  }

  if (stats.videosWithoutDuration === 0) {
    return (
      <div
        className="p-4 rounded border"
        style={{
          background: "var(--color-success)",
          borderColor: "var(--color-primary-400)",
          color: "var(--color-text-primary)",
        }}
      >
        <div className="flex items-center gap-2">
          <span>‚úÖ</span>
          <span className="font-medium">
            –í—Å–µ –≤–∏–¥–µ–æ –∏–º–µ—é—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ ({stats.totalVideos} –∏–∑{" "}
            {stats.totalVideos})
          </span>
        </div>
      </div>
    );
  }

  return (
    <div
      className="p-6 rounded-lg border"
      style={{
        background: "var(--color-primary-300)",
        borderColor: "var(--color-primary-400)",
      }}
    >
      <h2
        className="text-lg font-semibold mb-4"
        style={{ color: "var(--color-text-primary)" }}
      >
        ‚è±Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤–∏–¥–µ–æ
      </h2>

      <div
        className="p-4 rounded border mb-4"
        style={{
          background: "var(--color-primary-100)",
          borderColor: "var(--color-primary-400)",
        }}
      >
        <div className="flex items-center justify-between mb-4">
          <div>
            <h4
              className="font-medium"
              style={{ color: "var(--color-text-primary)" }}
            >
              üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏–¥–µ–æ
            </h4>
            <p
              className="text-sm mt-1"
              style={{ color: "var(--color-text-secondary)" }}
            >
              {stats.videosWithoutDuration} –∏–∑ {stats.totalVideos} –≤–∏–¥–µ–æ –Ω–µ
              –∏–º–µ—é—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            </p>
          </div>
        </div>

        <button
          onClick={updateDurations}
          disabled={updating}
          className="btn-discord btn-discord-primary"
        >
          {updating ? "üîÑ –ü–µ—Ä–µ—Å—á–µ—Ç..." : "üöÄ –ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫—É—Ä—Å–æ–≤"}
        </button>
      </div>

      <div
        className="text-xs p-3 rounded border"
        style={{
          background: "var(--color-primary-100)",
          borderColor: "var(--color-primary-400)",
          color: "var(--color-text-secondary)",
        }}
      >
        <p className="font-medium mb-1">‚ÑπÔ∏è –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</p>
        <ul className="space-y-1">
          <li>
            ‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤
            –±—Ä–∞—É–∑–µ—Ä–µ
          </li>
          <li>
            ‚Ä¢ –û–±—â–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫—É—Ä—Å–∞ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤–∏–¥–µ–æ
          </li>
          <li>
            ‚Ä¢ –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –∫—É—Ä—Å–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Ö
            –≤–∏–¥–µ–æ
          </li>
          <li>‚Ä¢ –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –∏–ª–∏ –∏–º–ø–æ—Ä—Ç–∞</li>
        </ul>
      </div>
    </div>
  );
}
