// app/page.tsx (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏)
"use client";
import { useState, useEffect } from "react";
import { useAuth } from "@/lib/hooks/useAuth";
import Header from "@/components/layout/Header";
import CourseGrid from "@/components/courses/CourseGrid";
import CourseFilter from "@/components/courses/CourseFilter";
import type { Course, ApiResponse, CourseFilterType } from "@/types";

// –†–∞—Å—à–∏—Ä—è–µ–º –±–∞–∑–æ–≤—ã–π Course –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
interface HomePageCourse extends Course {
  totalDuration: number;
}

export default function HomePage() {
  const { isAuthenticated, isLoading: authLoading } = useAuth();
  const [courses, setCourses] = useState<HomePageCourse[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [filter, setFilter] = useState<CourseFilterType>("all");

  const fetchCourses = async (filterType: CourseFilterType = "all") => {
    try {
      setLoading(true);
      const response = await fetch(`/api/courses?type=${filterType}`);
      const data: ApiResponse<HomePageCourse[]> = await response.json();

      if (data.success && data.data) {
        console.log("–î–∞–Ω–Ω—ã–µ –∫—É—Ä—Å–æ–≤:", data.data);
        setCourses(data.data);
        setError(null);
      } else {
        setError(data.error || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É—Ä—Å–æ–≤");
      }
    } catch (err) {
      setError("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫—É—Ä—Å–æ–≤");
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É—Ä—Å–æ–≤:", err);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchCourses(filter);
  }, [filter]);

  const handleFilterChange = (newFilter: CourseFilterType) => {
    setFilter(newFilter);
  };

  if (authLoading) {
    return (
      <div className="flex-1 flex items-center justify-center">
        <div className="w-8 h-8 border-2 border-gray-300 border-t-blue-600 rounded-full animate-spin"></div>
      </div>
    );
  }

  return (
    <div className="flex flex-col flex-1">
      <Header />

      <main className="flex-grow max-w-7xl mx-auto px-6 py-8">
        {/* Hero section */}
        <div className="text-center mb-12">
          <h2
            className="text-3xl font-bold mb-4"
            style={{ color: "var(--color-text-primary)" }}
          >
            {isAuthenticated
              ? "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ!"
              : "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤–∏–¥–µ–æ–∫—É—Ä—Å–æ–≤"}
          </h2>
          <p
            className="text-lg mb-8"
            style={{ color: "var(--color-text-secondary)" }}
          >
            {isAuthenticated
              ? "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏–∑—É—á–µ–Ω–∏–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –∫—É—Ä—Å"
              : "–ò–∑—É—á–∞–π—Ç–µ –Ω–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ —Å –ø–æ–º–æ—â—å—é –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ–∫—É—Ä—Å–æ–≤"}
          </p>

          {/* Course Filter */}
          <CourseFilter
            activeFilter={filter}
            onFilterChange={handleFilterChange}
          />
        </div>

        {/* Error State */}
        {error && (
          <div
            className="mb-6 p-4 rounded-lg border"
            style={{
              background: "var(--color-danger-bg, #fee)",
              borderColor: "var(--color-danger, #f00)",
            }}
          >
            <div className="flex justify-between items-center">
              <p style={{ color: "var(--color-danger, #f00)" }}>‚ùå {error}</p>
              <button
                onClick={() => fetchCourses(filter)}
                className="text-sm underline hover:opacity-80"
                style={{ color: "var(--color-danger, #f00)" }}
              >
                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
              </button>
            </div>
          </div>
        )}

        {/* Loading State */}
        {loading && (
          <div className="flex items-center justify-center py-12">
            <div className="w-8 h-8 border-2 border-gray-300 border-t-blue-600 rounded-full animate-spin"></div>
            <span
              className="ml-3"
              style={{ color: "var(--color-text-secondary)" }}
            >
              –ó–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–æ–≤...
            </span>
          </div>
        )}

        {/* Empty State */}
        {!loading && !error && courses.length === 0 && (
          <div className="text-center py-12">
            <div className="text-6xl mb-4">üìö</div>
            <h3
              className="text-lg font-medium mb-2"
              style={{ color: "var(--color-text-primary)" }}
            >
              –ü–æ–∫–∞ –Ω–µ—Ç –∫—É—Ä—Å–æ–≤
            </h3>
            <p style={{ color: "var(--color-text-secondary)" }}>
              {filter === "all"
                ? "–ö—É—Ä—Å—ã –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å, –∫–æ–≥–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏—Ö –¥–æ–±–∞–≤–∏—Ç."
                : `–ù–µ—Ç –∫—É—Ä—Å–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${
                    filter === "free" ? "–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ" : "–ø–ª–∞—Ç–Ω—ã–µ"
                  }".`}
            </p>
          </div>
        )}

        {/* Courses Grid */}
        {!loading && !error && courses.length > 0 && (
          <CourseGrid
            courses={courses}
            isLoading={loading}
            isAuthenticated={isAuthenticated}
            userCourseAccess={courses
              .filter((c) => c.hasAccess)
              .map((c) => c.id)}
            onPurchaseClick={(courseId) => {
              window.location.href = `/courses/${courseId}`;
            }}
          />
        )}

        {/* CTA for Non-Authenticated Users */}
        {!isAuthenticated && courses.length > 0 && (
          <div
            className="mt-8 p-6 rounded-lg border text-center"
            style={{
              background: "var(--color-primary-100)",
              borderColor: "var(--color-accent)",
            }}
          >
            <h3
              className="text-lg font-medium mb-2"
              style={{ color: "var(--color-primary-400)" }}
            >
              –•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø?
            </h3>
            <p className="mb-4" style={{ color: "var(--color-primary-400)" }}>
              –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç–Ω—ã–º –∫—É—Ä—Å–∞–º –∏
              –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å
            </p>
            <a href="/auth/signin" className="btn-discord btn-discord-primary">
              –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google
            </a>
          </div>
        )}
      </main>

      <footer
        className="border-t py-8"
        style={{
          background: "var(--color-primary-300)",
          borderColor: "var(--color-primary-400)",
        }}
      >
        <div className="max-w-7xl mx-auto px-6 text-center">
          <p style={{ color: "var(--color-text-secondary)" }}>
            ¬© 2025 VideoCourses Platform. –°–¥–µ–ª–∞–Ω–æ –Ω–∞ –∑–∞–∫–∞–∑.
          </p>
        </div>
      </footer>
    </div>
  );
}
